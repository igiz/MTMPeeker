<Window x:Class="Desktop.WPF.MainForm"
             Name="mainWindow"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d"
             Title="TFSPeeker - A way to forget MTM" Height="720" Width="1080"
             WindowStyle="None"
             Icon="../Resources/icon-window.png"
             AllowsTransparency="False"
             IsHitTestVisible="True" 
             ResizeMode="NoResize">
    
    <Window.Background>
        <LinearGradientBrush EndPoint="0.3,1" StartPoint="0.3,0.03">
            <GradientStop Color="Black" Offset="0"/>
            <GradientStop Color="SlateGray" Offset="0.3"/>
            <GradientStop Color="Black" Offset="0.6"/>
        </LinearGradientBrush>
    </Window.Background>

    <Window.Resources>

        <ControlTemplate x:Key="CustomToggleButton" TargetType="ToggleButton">
            <Grid>
                <Border Name="Border" />
                <Border Name="SmallBorder" />
                <Path Name="Arrow" />
            </Grid>
        </ControlTemplate>

        <Style x:Key="comboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border x:Name="Bd" Background="DarkSlateGray" BorderBrush="Black" BorderThickness="1">
                            <Label FontSize="12" HorizontalContentAlignment="Center" Content="{Binding}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter TargetName="Bd" Property="Background" Value="Black" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="gridViewColumnHeaderStyle" TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="Background" Value="LightBlue" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="BorderBrush" Value="Black"/>
        </Style>

        <Style x:Key="listViewStyle" TargetType="{x:Type ListView}">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="DarkSlateGray"/>
        </Style>

        <Style x:Key="labelStyle" TargetType="{x:Type Label}">
            <Setter Property="FontSize" Value="16" />
            <Setter Property="FontFamily" Value="Calibri" />
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="Medium"/>
        </Style>

        <Style x:Key="rounded" TargetType="{x:Type TextBox}">
            <Setter Property="Background"  Value="DarkSlateGray"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Style.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="3" />
                </Style>
            </Style.Resources>
        </Style>

    </Window.Resources>

    <DockPanel Margin="5" MouseDown="DockPanel_MouseDown">
        <StackPanel Background="Transparent" DockPanel.Dock="Top">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.1*"/>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="0.4*"/>
                </Grid.ColumnDefinitions>
                <Image VerticalAlignment="Top" HorizontalAlignment="Left" Source="../Resources/icon-main.png" Width="25" Height="25"/>
                <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="1">
                    <Label Background="Transparent" Foreground="Yellow" Content="(-(-_(-_-)_-)-)"/>
                    <Label Background="Transparent" Foreground="White" Content="{Binding Title, ElementName=mainWindow}"/>
                    <Label Background="Transparent" Foreground="Yellow" Content="Total shown:"/>
                    <Label Background="Transparent" Foreground="White" FontWeight="Bold" Content="{Binding Total}"/>
                    <Label Background="Transparent" Foreground="Yellow" Content="Last refresh:"/>
                    <Label Background="Transparent" Foreground="White" FontWeight="Bold" Content="{Binding LastRefresh}"/>
                    <Label Background="Transparent" Foreground="Yellow" Content="User:"/>
                    <Label Background="Transparent" Foreground="White" FontWeight="Bold" Content="{Binding CurrentUser}"/>
                </StackPanel>
                <StackPanel HorizontalAlignment="Right" Orientation="Horizontal" FlowDirection="LeftToRight" Grid.Row="0" Grid.Column="2">
                    <Button FontWeight="ExtraBlack" BorderBrush="White" Background="LightBlue" Width="60" Content="-" Margin="2" Click="Button_Minimize" />
                    <Button FontWeight="ExtraBlack" BorderBrush="White" Background="OrangeRed" Width="60" Content="x" Margin="2" Command="{Binding Path=Close}"/>
                </StackPanel>
            </Grid>
        </StackPanel>
        <Grid DockPanel.Dock="Top">
            <Grid.Resources>
                <Style BasedOn="{StaticResource labelStyle}" TargetType="{x:Type Label}" />
                <Style BasedOn="{StaticResource rounded}" TargetType="{x:Type TextBox}" />
            </Grid.Resources>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.5*"/>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="0.7*"/>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="0.7*"/>
                <ColumnDefinition Width="1.5*"/>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="0.3*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"></RowDefinition>
            </Grid.RowDefinitions>

            <Label Grid.Row="0" Grid.Column="0" Content="Suite:" HorizontalContentAlignment="Center"/>
            <TextBox Grid.Row="0" Grid.Column="1" Name="txtSuiteId" Text="{Binding SuiteId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <TextBox.InputBindings>
                    <KeyBinding Command="{Binding Path=ChangeSuite}" Key="Enter" />
                </TextBox.InputBindings>
            </TextBox>
            <Label Grid.Row="0" Grid.Column="2" Content="Plan ID:" HorizontalContentAlignment="Center"/>
            <TextBox Grid.Row="0" Grid.Column="3" Name="txtPlanId" Text="{Binding PlanId, Mode=TwoWay , UpdateSourceTrigger=PropertyChanged}">
                <TextBox.InputBindings>
                    <KeyBinding Command="{Binding Path=ChangePlan}" Key="Enter" />
                </TextBox.InputBindings>
            </TextBox>
            <Label Grid.Row="0" Grid.Column="4" Content="Keyword:" HorizontalContentAlignment="Center"/>
            <TextBox Grid.Row="0" Grid.Column="5" Name="txtKeyword" Text="{Binding Keyword, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <TextBox.InputBindings>
                    <KeyBinding Command="{Binding Path=Filter}" Key="Enter" />
                </TextBox.InputBindings>
            </TextBox>
            <StackPanel Grid.Row="0" Grid.Column="6" Margin="15,5,5,5">
                <ComboBox Foreground="DarkSlateGray" Background="DarkSlateBlue" FontSize="12" FontWeight="ExtraBlack" Name="cbxViewType" ItemsSource="{Binding ViewTypes}" SelectedItem="{Binding CurrentViewType}" >
                    <ComboBox.ItemContainerStyle>
                        <Style BasedOn="{StaticResource comboBoxItemStyle}" TargetType="{x:Type ComboBoxItem}"/>
                    </ComboBox.ItemContainerStyle>
                </ComboBox>
            </StackPanel>
            <Label Grid.Row="0" Grid.Column="7" Content="Auto-refresh:" HorizontalContentAlignment="Center"/>
            <CheckBox Grid.Row="0" Grid.Column="8" Name="chkbxRefresh" IsChecked="{Binding AutoRefresh}" VerticalAlignment="Center" HorizontalAlignment="Center" IsEnabled="false"/>
        </Grid>
        <ListView ItemsSource="{Binding TestCases}" Margin="3" Name="lvTestCases" >
            <ListView.Resources>
                <Style TargetType="{x:Type ListViewItem}">
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" Value="Black" />
                            <Setter Property="BorderBrush" Value="LightBlue" />
                            <Setter Property="FontWeight" Value="Medium"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="DarkSlateGray" />
                        </Trigger>
                    </Style.Triggers>
                    <EventSetter Event="MouseDoubleClick" Handler="HandleDoubleClick" />
                </Style>

                <Style BasedOn="{StaticResource listViewStyle}" TargetType="{x:Type ListView}" />
            </ListView.Resources>
            <ListView.View>
                <GridView>
                    <GridView.ColumnHeaderContainerStyle>
                        <Style BasedOn="{StaticResource gridViewColumnHeaderStyle}" TargetType="{x:Type GridViewColumnHeader}"/>
                    </GridView.ColumnHeaderContainerStyle>
                    <GridViewColumn Header="Id" Width="50" DisplayMemberBinding="{Binding Id}" />
                    <GridViewColumn Header="State" Width="70" DisplayMemberBinding="{Binding State}" />
                    <GridViewColumn Header="Assigned To" Width="130">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding AssignedTo}" FontWeight="Medium" Foreground="Yellow"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Title" Width="690" DisplayMemberBinding="{Binding Title}" />
                    <GridViewColumn Header="Path" Width="90" DisplayMemberBinding="{Binding Path}" />
                </GridView>
            </ListView.View>
        </ListView>
    </DockPanel>
</Window>
